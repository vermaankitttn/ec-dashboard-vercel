{"ast":null,"code":"var _jsxFileName = \"/Users/ankitverma/Documents/Projects/SKA Metroville/ECResults/src/App.js\",\n  _s = $RefreshSig$();\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [activeTab, setActiveTab] = useState(0); // 0 for Top 10, 1 for Remaining\n  const [lastSwitch, setLastSwitch] = useState(Date.now());\n  const [refreshCount, setRefreshCount] = useState(0);\n  const [candidatesData, setCandidatesData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [lastRefresh, setLastRefresh] = useState(null);\n\n  // Function to fetch data from Google Sheets\n  const fetchData = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n\n      // Try to fetch from backend API first\n      const response = await fetch('/api/google-sheets-data');\n      if (response.ok) {\n        const data = await response.json();\n        setCandidatesData(data);\n        setLastRefresh(new Date().toISOString());\n      } else {\n        // Fallback to mock data if API fails\n        const mockData = await googleSheetsService.loadData();\n        setCandidatesData(mockData);\n        setLastRefresh(new Date().toISOString());\n      }\n    } catch (error) {\n      console.error('Error fetching data:', error);\n      setError('Failed to load data from Google Sheets');\n      // Use mock data as fallback\n      const mockData = await googleSheetsService.loadData();\n      setCandidatesData(mockData);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Initial data load\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  // Auto-switch tabs every 10 seconds\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setActiveTab(prev => (prev + 1) % 2);\n      setLastSwitch(Date.now());\n    }, 10000);\n    return () => clearInterval(interval);\n  }, []);\n\n  // Auto-refresh data every 60 seconds\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setRefreshCount(prev => prev + 1);\n      fetchData(); // Fetch new data\n    }, 60000);\n    return () => clearInterval(interval);\n  }, []);\n  const top10Candidates = candidatesData.slice(0, 10);\n  const remainingCandidates = candidatesData.slice(10);\n  const timeSinceSwitch = Math.floor((Date.now() - lastSwitch) / 1000);\n  const countdown = Math.max(0, 10 - timeSinceSwitch);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\uD83C\\uDFC6 EC Results Live Dashboard 2025-2026\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-container\",\n      children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n        activeTab: activeTab,\n        countdown: countdown,\n        refreshCount: refreshCount,\n        totalCandidates: candidatesData.length,\n        onTabChange: setActiveTab,\n        loading: loading,\n        error: error,\n        lastRefresh: lastRefresh,\n        onRefresh: fetchData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        className: \"main-content\",\n        children: activeTab === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tab-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"tab-header top10\",\n            children: \"\\uD83C\\uDFC6 TOP 10 CANDIDATES\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"candidates-grid\",\n            children: top10Candidates.map(candidate => /*#__PURE__*/_jsxDEV(CandidateCard, {\n              candidate: candidate,\n              isTop10: true\n            }, candidate.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tab-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"tab-header remaining\",\n            children: [\"\\uD83D\\uDCCA REMAINING CANDIDATES (11+) - \", remainingCandidates.length, \" Candidates\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"candidates-grid\",\n            children: remainingCandidates.length > 0 ? remainingCandidates.map(candidate => /*#__PURE__*/_jsxDEV(CandidateCard, {\n              candidate: candidate,\n              isTop10: false\n            }, candidate.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 21\n            }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"no-candidates\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"No remaining candidates to display\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 121,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"All candidates are in the top 10!\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"YK2c+WUwIt5yK+TslYBwZx6aj5c=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["App","_s","activeTab","setActiveTab","useState","lastSwitch","setLastSwitch","Date","now","refreshCount","setRefreshCount","candidatesData","setCandidatesData","loading","setLoading","error","setError","lastRefresh","setLastRefresh","fetchData","response","fetch","ok","data","json","toISOString","mockData","googleSheetsService","loadData","console","useEffect","interval","setInterval","prev","clearInterval","top10Candidates","slice","remainingCandidates","timeSinceSwitch","Math","floor","countdown","max","_jsxDEV","className","children","fileName","_jsxFileName","lineNumber","columnNumber","Sidebar","totalCandidates","length","onTabChange","onRefresh","map","candidate","CandidateCard","isTop10","id","_c","$RefreshReg$"],"sources":["/Users/ankitverma/Documents/Projects/SKA Metroville/ECResults/src/App.js"],"sourcesContent":["function App() {\n  const [activeTab, setActiveTab] = useState(0); // 0 for Top 10, 1 for Remaining\n  const [lastSwitch, setLastSwitch] = useState(Date.now());\n  const [refreshCount, setRefreshCount] = useState(0);\n  const [candidatesData, setCandidatesData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [lastRefresh, setLastRefresh] = useState(null);\n\n  // Function to fetch data from Google Sheets\n  const fetchData = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      \n      // Try to fetch from backend API first\n      const response = await fetch('/api/google-sheets-data');\n      if (response.ok) {\n        const data = await response.json();\n        setCandidatesData(data);\n        setLastRefresh(new Date().toISOString());\n      } else {\n        // Fallback to mock data if API fails\n        const mockData = await googleSheetsService.loadData();\n        setCandidatesData(mockData);\n        setLastRefresh(new Date().toISOString());\n      }\n    } catch (error) {\n      console.error('Error fetching data:', error);\n      setError('Failed to load data from Google Sheets');\n      // Use mock data as fallback\n      const mockData = await googleSheetsService.loadData();\n      setCandidatesData(mockData);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Initial data load\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  // Auto-switch tabs every 10 seconds\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setActiveTab(prev => (prev + 1) % 2);\n      setLastSwitch(Date.now());\n    }, 10000);\n\n    return () => clearInterval(interval);\n  }, []);\n\n  // Auto-refresh data every 60 seconds\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setRefreshCount(prev => prev + 1);\n      fetchData(); // Fetch new data\n    }, 60000);\n\n    return () => clearInterval(interval);\n  }, []);\n\n  const top10Candidates = candidatesData.slice(0, 10);\n  const remainingCandidates = candidatesData.slice(10);\n\n  const timeSinceSwitch = Math.floor((Date.now() - lastSwitch) / 1000);\n  const countdown = Math.max(0, 10 - timeSinceSwitch);\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>🏆 EC Results Live Dashboard 2025-2026</h1>\n      </header>\n\n      <div className=\"dashboard-container\">\n        <Sidebar \n          activeTab={activeTab}\n          countdown={countdown}\n          refreshCount={refreshCount}\n          totalCandidates={candidatesData.length}\n          onTabChange={setActiveTab}\n          loading={loading}\n          error={error}\n          lastRefresh={lastRefresh}\n          onRefresh={fetchData}\n        />\n\n        <main className=\"main-content\">\n          {activeTab === 0 ? (\n            <div className=\"tab-content\">\n              <div className=\"tab-header top10\">\n                🏆 TOP 10 CANDIDATES\n              </div>\n              <div className=\"candidates-grid\">\n                {top10Candidates.map((candidate) => (\n                  <CandidateCard \n                    key={candidate.id}\n                    candidate={candidate}\n                    isTop10={true}\n                  />\n                ))}\n              </div>\n            </div>\n          ) : (\n            <div className=\"tab-content\">\n              <div className=\"tab-header remaining\">\n                📊 REMAINING CANDIDATES (11+) - {remainingCandidates.length} Candidates\n              </div>\n              <div className=\"candidates-grid\">\n                {remainingCandidates.length > 0 ? (\n                  remainingCandidates.map((candidate) => (\n                    <CandidateCard \n                      key={candidate.id}\n                      candidate={candidate}\n                      isTop10={false}\n                    />\n                  ))\n                ) : (\n                  <div className=\"no-candidates\">\n                    <h3>No remaining candidates to display</h3>\n                    <p>All candidates are in the top 10!</p>\n                  </div>\n                )}\n              </div>\n            </div>\n          )}\n        </main>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}